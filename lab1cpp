//lab1 using c++. 
// Deliverables
// Using SIR model validate RK4 converges quicker than RK2 and Euler's method.
// expand SIR model to account for more variables to repesent a more relistic epidemic

#include "Epidemic.h"
#include <iostream>
#include <fstream>

using namespace std;



int main()
{
	// Defining output file for matlab (from https://cplusplus.com/doc/tutorial/files/)
	ofstream myfile;

	
	// n sets up the array size and duration of the model
	const int n = 2000;
	double S[n];
	double I[n];
	double R[n];
	double D[n];
	//defining intial conditions
	S[0] = 10000;
	I[0] = 1;
	R[0] = 0;
	D[0] = 0;
	// defining disease variables
	double gamma = 10;
	double R0 = 2.0;
	double beta = R0 / (gamma * (I[0] * S[0]));

	double alpha = 10000000000000;
	double epsilon = 0;
	double f = .01;
	double  ds, di, dr, dD;
	double dt = 150.0 / n;
	


	// for loop to handle eulers method.
	for (int j = 1;j < n;j++) {
		
		ds = -beta * S[j - 1] * I[j - 1] + (1.0 / alpha) * R[j - 1] + epsilon;
		di = beta * S[j - 1] * I[j - 1] - (1.0 / gamma) * I[j - 1];
		dr = (1 / gamma) * (1 - f) * I[j - 1] - (1.0 / alpha) * R[j - 1];
		dD = (1 / gamma) * f * I[j - 1];

		S[j] = S[j - 1] + ds * dt;
		I[j] = I[j - 1] + di * dt;
		R[j] = R[j - 1] + dr * dt;
	}
	

	myfile.open("euler.txt", ios::out | ios::app);
	if (myfile.is_open()) {
		for (int j = 0;j < n;j++) {
			cout << j * dt << ", " << S[j] << ", " << I[j] << ",	" << R[j] << endl;
			myfile << j * dt << ", " << S[j] << ", " << I[j] << ",	" << R[j] << endl;

		}
	}
	else {
		cout << "File wasnt opeded";
	}
	myfile.close();


	double h = dt / 2;
	//Start of RK2
	// for loop to handle RK2 method.

	for (int j = 1;j < n;j++) {

		ds = -beta * S[j - 1] * I[j - 1] + (1.0 / alpha) * R[j - 1] + epsilon;
		di = beta * S[j - 1] * I[j - 1] - (1.0 / gamma) * I[j - 1];
		dr = (1 / gamma) * (1 - f) * I[j - 1] - (1.0 / alpha) * R[j - 1];
		dD = (1 / gamma) * f * I[j - 1];

		S[j] = S[j - 1] + ds * h;
		I[j] = I[j - 1] + di * h;
		R[j] = R[j - 1] + dr * h;

		ds = -beta * S[j] * I[j] + (1.0 / alpha) * R[j] + epsilon;
		di = beta * S[j] * I[j] - (1.0 / gamma) * I[j];
		dr = (1 / gamma) * (1 - f) * I[j] - (1.0 / alpha) * R[j];
		dD = (1 / gamma) * f * I[j];

		S[j] = S[j - 1] + ds * dt;
		I[j] = I[j - 1] + di * dt;
		R[j] = R[j - 1] + dr * dt;
	}
	myfile.open("RK2.txt", ios::out | ios::app);
	if (myfile.is_open()) {
		for (int j = 0;j < n;j++) {
			cout <<  j * dt << ", " << S[j] << ",	" << I[j] << ",	" << R[j] << endl;
			myfile << j*dt << " ";
			myfile << S[j] << " ";
			myfile << I[j] << " ";
			myfile << R[j] << endl;

		}
	}
	else {
		cout << "File wasnt opeded";
	}
	myfile.close();
	for (int j = 1;j < n;j++) {
		//1
		double ds1 = -beta * S[j - 1] * I[j - 1] + (1.0 / alpha) * R[j - 1] + epsilon;
		double di1 = beta * S[j - 1] * I[j - 1] - (1.0 / gamma) * I[j - 1];
		double dr1 = (1 / gamma) * (1 - f) * I[j - 1] - (1.0 / alpha) * R[j - 1];
		double dD1 = (1 / gamma) * f * I[j - 1];
		//2
		S[j] = S[j - 1] + ds1 * h;
		I[j] = I[j - 1] + di1 * h;
		R[j] = R[j - 1] + dr1 * h;
		//3
		double ds2 = -beta * S[j] * I[j] + (1.0 / alpha) * R[j] + epsilon;
		double di2 = beta * S[j] * I[j] - (1.0 / gamma) * I[j];
		double dr2 = (1 / gamma) * (1 - f) * I[j] - (1.0 / alpha) * R[j];
		double dD2 = (1 / gamma) * f * I[j];
		//2
		S[j] = S[j] + ds2 * h;
		I[j] = I[j] + di2 * h;
		R[j] = R[j] + dr2 * h;
		//3
		double ds3 = -beta * S[j] * I[j] + (1.0 / alpha) * R[j] + epsilon;
		double di3 = beta * S[j] * I[j] - (1.0 / gamma) * I[j];
		double dr3 = (1 / gamma) * (1 - f) * I[j] - (1.0 / alpha) * R[j];
		double dD3 = (1 / gamma) * f * I[j];
		//2
		S[j] = S[j] + ds3 * h;
		I[j] = I[j] + di3 * h;
		R[j] = R[j] + dr3 * h;
		//3
		double ds4 = -beta * S[j] * I[j] + (1.0 / alpha) * R[j] + epsilon;
		double di4 = beta * S[j] * I[j] - (1.0 / gamma) * I[j];
		double dr4 = (1 / gamma) * (1 - f) * I[j] - (1.0 / alpha) * R[j];
		double dD4 = (1 / gamma) * f * I[j];
		//8
		S[j] = S[j] + (1 / 6)(ds1 + 2 * ds2 + 2 * ds3 + ds4) * dt;
		I[j] = I[j] + (1 / 6)(di1 + 2 * di2 + 2 * di3 + di4) * dt;
		R[j] = R[j] + (1 / 6)(dr1 + 2 * dr2 + 2 * dr3 + dr4) * dt;
	}
	myfile.open("RK4.txt", ios::out | ios::app);
	if (myfile.is_open()) {
		for (int j = 0;j < n;j++) {
			cout << j * dt << ", " << S[j] << ",	" << I[j] << ",	" << R[j] << endl;
			myfile << j * dt << " ";
			myfile << S[j] << " ";
			myfile << I[j] << " ";
			myfile << R[j] << endl;

		}
	}
	else {
		cout << "File wasnt opeded";
	}
	myfile.close();
	return 0;
}
